#! /usr/bin/env yao
/*
 * *****************************************************************************
 *
 * SPDX-License-Identifier: BSD-2-Clause
 *
 * Copyright (c) 2018-2025 Gavin D. Howard and contributors.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * *****************************************************************************
 *
 * A script for getting project items from GitHub. This script requires a
 * `GITHUB_TOKEN` environment variable.
 *
 */

opts: Gaml = @(gaml){
	help: [
		"Downloads a GitHub issue or GitHub PR and adds it to the project\n"
		"files.\n"
		"\n"
		"Usage: ", $PROG, "--pr <number>\n"
	]
	options: {
		p: {
			help: "Whether to get a PR or not"
			short: @p
			long: @pr
			type: @NONE
		}
	}
};

pr: !bool = false;

leftovers: []str =
sys.getopts opt, arg: opts, sys.argv
{
	if opt == @p
	{
		pr! = true;
	}
};

if leftovers.len != 1
{
	io.eprint("Wrong number of arguments; must have an issue or PR number\n");
	sys.exit(1);
}

// This line is just to ensure that the argument is a number.
n: num = num(leftovers[0]);

exec(n, pr);
